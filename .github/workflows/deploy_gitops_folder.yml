name: TPK8S Gitops
run-name: ${{ github.actor }} deploying
on:
  push:
    branches:
      - "master"
jobs:
  gitops-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Install Tanzu CLI
        env:
          TANZU_CLI_VERSION: ${{vars.TANZU_CLI_VERSION}}
        run: |
          curl -Lo tanzu-cli-linux-amd64.tar.gz https://github.com/vmware-tanzu/tanzu-cli/releases/download/${TANZU_CLI_VERSION}/tanzu-cli-linux-amd64.tar.gz
          curl -Lo tanzu-cli-binaries-checksums.txt https://github.com/vmware-tanzu/tanzu-cli/releases/download/${TANZU_CLI_VERSION}/tanzu-cli-binaries-checksums.txt
          if [ "$(cat tanzu-cli-binaries-checksums.txt | grep tanzu-cli-linux-amd64.tar.gz)" != "$(sha256sum tanzu-cli-linux-amd64.tar.gz)" ]; then echo "Checksum does not match"; exit 1; fi
          tar -xf tanzu-cli-linux-amd64.tar.gz
          mv ${TANZU_CLI_VERSION}/tanzu-cli-linux_amd64 /usr/local/bin/tanzu
          tanzu ceip-participation set false
          tanzu config eula accept
          tanzu init
          tanzu version

      - name: Install tanzu plugins
        run: |
          tanzu plugin install resource

      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_CREDENTIALS }}
          fetch-depth: 0
            
      - name: Deploy resources to Tanzu Project
        env:
          TANZU_API_TOKEN: ${{ secrets.API_TOKEN }}
          ENDPOINT: ${{ vars.API_ENDPOINT || 'console.cloud.vmware.com' }}
        run: |
            tanzu login --endpoint ${ENDPOINT}
            tanzu context list --wide
            cd git-ops
            tree
            tanzu deploy --nested-contexts --patch -y


      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: stage
          commit_message: Push application binaries to prod
          commit_user_name: 0pens0
          
      - name: Create PR to Prod
        env:
          GH_TOKEN: ${{secrets.GIT_CREDENTIALS}}
        run: |
            gh pr create --title "Promote to Prod" --fill --base master --head stage

      - run: echo "üçè This job's status is ${{ job.status }}."
